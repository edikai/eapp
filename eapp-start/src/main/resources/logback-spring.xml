<?xml version="1.0" encoding="UTF-8"?>
<configuration scan="true" scanPeriod="60 seconds" debug="false">

    <contextName>logback</contextName>
    <property name="log.path" value="/var/logs/eapp"/>

    <!-- 自定义颜色支持 -->
    <conversionRule conversionWord="clr" converterClass="org.springframework.boot.logging.logback.ColorConverter"/>
    <conversionRule conversionWord="wex"
                    converterClass="org.springframework.boot.logging.logback.WhitespaceThrowableProxyConverter"/>
    <conversionRule conversionWord="wEx"
                    converterClass="org.springframework.boot.logging.logback.ExtendedWhitespaceThrowableProxyConverter"/>

    <property name="CONSOLE_LOG_PATTERN"
              value="${CONSOLE_LOG_PATTERN:-%clr(%d{${LOG_DATEFORMAT_PATTERN:-yyyy-MM-dd HH:mm:ss.SSS}}){faint} %clr(${LOG_LEVEL_PATTERN:-%5p}) %clr(${PID:- }){magenta} %clr(---){faint} %clr([%15.15t]){faint} %clr(%-40.40(%logger{39}-%line{10})){cyan} %clr(:){faint} %m%n${LOG_EXCEPTION_CONVERSION_WORD:-%wEx}}"/>
    <property name="FILE_LOG_PATTERN"
              value="%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level ${PID:-} [%-40.40(%logger{36}-%line)] : %msg%n"/>

    <!--输出到控制台-->
    <appender name="console" class="ch.qos.logback.core.ConsoleAppender">
        <!-- <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
             <level>ERROR</level>
         </filter>-->
        <encoder>
            <pattern>${CONSOLE_LOG_PATTERN}</pattern>
        </encoder>
    </appender>

    <!--输出到文件-->
    <appender name="error_file" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${log.path}/error.log</file>
        <!--ThresholdFilter为系统定义的拦截器，例如我们用ThresholdFilter来过滤掉ERROR级别以下的日志不输出到文件中-->
        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
            <level>ERROR</level>
        </filter>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${log.path}/error_%d{yyyy-MM-dd}.log</fileNamePattern>
            <maxHistory>30</maxHistory> <!-- 只保留最近30天的日志 -->
            <totalSizeCap>1GB</totalSizeCap> <!-- 日志文件的上限大小, 例如设置为1GB的话，那么到了这个值，就会删除旧的日志。 -->
        </rollingPolicy>
        <encoder>
            <pattern>${FILE_LOG_PATTERN}</pattern>
        </encoder>
    </appender>
    <appender name="info_file" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${log.path}/info.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${log.path}/info_%d{yyyy-MM-dd}.log</fileNamePattern>
            <maxHistory>30</maxHistory> <!-- 只保留最近30天的日志 -->
            <totalSizeCap>200MB</totalSizeCap> <!-- 日志文件的上限大小, 例如设置为1GB的话，那么到了这个值，就会删除旧的日志。 -->
        </rollingPolicy>
        <encoder>
            <pattern>${FILE_LOG_PATTERN}</pattern>
        </encoder>
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>info</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>
    </appender>
    <appender name="debug_file" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${log.path}/debug.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${log.path}/debug_%d{yyyy-MM-dd}.log</fileNamePattern>
            <maxHistory>30</maxHistory> <!-- 只保留最近30天的日志 -->
            <totalSizeCap>200MB</totalSizeCap> <!-- 日志文件的上限大小, 例如设置为1GB的话，那么到了这个值，就会删除旧的日志。 -->
        </rollingPolicy>
        <encoder>
            <pattern>${FILE_LOG_PATTERN}</pattern>
        </encoder>
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>debug</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>
    </appender>

    <root level="info">
        <appender-ref ref="console"/>
        <appender-ref ref="error_file"/>
        <appender-ref ref="info_file"/>
    </root>

    <!-- 指定日志使用环境
        测试环境+开发环境. 多个使用逗号隔开.
    -->
    <springProfile name="test">
        <!--
         用来设置某一个包或者具体的某一个类的日志打印级别、以及指定<appender>
         -->
        <!-- logback为java中的包 -->
        <!--<logger name="com.ek.eapp" level="debug"/> &lt;!&ndash; 打印SQL &ndash;&gt;-->
        <!--logback.LogbackDemo：类的全路径
            没有设置addtivity，默认为true，将此loger的打印信息向上级传递, log会打印两次
        -->
        <logger name="com.ek.eapp" level="debug" additivity="true">
            <appender-ref ref="debug_file"/>
            <!--<appender-ref ref="console"/>-->
        </logger>
    </springProfile>

    <springProfile name="dev">
        <logger name="com.example.demo.controllers.IndexController" level="WARN" additivity="true">
            <appender-ref ref="console"/>
        </logger>
    </springProfile>
</configuration>